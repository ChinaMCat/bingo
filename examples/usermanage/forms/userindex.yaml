# 表单 编码
code: userindex
#作者
author: bingo
#版本号
version: 1.0.0
#最后更新时间
updateDate: 2020-09-21 20:35:00
type: QUERY
title: 用户管理
# 描述
description: 用户管理主界面
# 参数描述.
# name 参数名，policy 策略（Must 必填、Option 可选，Maybe 特定条件必填） label 参数描述名称
# type 参数类型（Int 整形、String 文本、Date 日期、DateTime 日期时间）、具体的自定义类型(包括新增的字典)
# verify 用于作为校验的校验规则名
parameters:
    - {name: id, policy: Must, label: 用户登录名, type: String,tip: 输入用户登录名称}
#Query 结果集合
resultset:
  - {name: id, label: 登录名, type: String,expr: null,inner: d_id }
  - {name: name, label: 名称, type: String,expr: null,inner: d_name }
  - {name: apps, label: 备注, type: String,expr: null,inner: d_memo }
toolbar:
  - {name: adduser,label: 新增用户}
tools:
  - {name: deluser,label: 删除 }
jsscript: |
  function adduser(obj){
    console.log("adduser");
    console.log(obj);
  layer.open({
       type: 2 //此处以iframe举例
       ,title: '当你选择该窗体时，即会在最顶端'
       ,area: ['480px', '560px']
       ,shade: 0
       ,maxmin: true
       ,offset: [ //为了演示，随机坐标
         Math.random()*($(window).height()-300)
         ,Math.random()*($(window).width()-390)
       ]
       ,content: '/form/newuser'
       ,btn: [] //只是为了演示
       ,zIndex: layer.zIndex //重点1
       ,success: function(layero){
         layer.setTop(layero); //重点2
       }
     });
  }
  function deluser(obj){
    console.log("deluser");
    console.log(obj);
  }

response:
  type: direct
  options: {}
extends:
# 脚本类型 SQL、GET、POST、LUA
scriptType: LUA
script: |
  db=require("db")
  json=require("dkjson")
  result={}
  user={}
  user.role=_inputs.id
  us,e=db.query("user","querybyrole",user)
  log(us)
  result.data={}
  for k,v in pairs(us) do
    table.insert(result.data, v)
  end
  log(e)
  result.code=0
  return result