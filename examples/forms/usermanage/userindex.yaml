# 表单 编码
code: usermanage.userindex
#作者
author: bingo
#版本号
version: 1.0.0
#最后更新时间
updateDate: 2020-09-21 20:35:00
type: QUERY
title: 用户管理
# 描述
description: 用户管理主界面
# 参数描述.
# name 参数名，policy 策略（Must 必填、Option 可选，Maybe 特定条件必填） label 参数描述名称
# type 参数类型（Int 整形、String 文本、Date 日期、DateTime 日期时间）、具体的自定义类型(包括新增的字典)
# verify 用于作为校验的校验规则名
parameters:
    - {name: id, policy: Must, label: 用户登录名, type: String,tip: 输入用户登录名称}
    - {name: id2, policy: Must, label: 用户登录名, type: Date,tip: 输入用户登录名称}
#Query 结果集合
resultset:
  - {name: id, label: 登录名, type: String,expr: null,inner: d_id }
  - {name: name, label: 名称, type: String,expr: null,inner: d_name }
  - {name: apps, label: 备注, type: String,expr: null,inner: d_memo }
toolbar:
  - {name: adduser,label: 新增用户}
tools:
  - {name: edituser,label: 编辑 }
jsscript: |
  function adduser(obj){
    console.log("adduser");
    console.log(obj);
    showDialog("新增","/form/usermanage.newuser");
  }
  function edituser(obj){
    showDialogExt("修改","/form/usermanage.edituser",obj);
    console.log("deluser");
    console.log(obj);
  }

response:
  type: direct
  options: {}
extends:
# 脚本类型 SQL、GET、POST、LUA
scriptType: LUA
script: |
  db=require("db")
  require("bingo")
  user={}
  user.role=_inputs.id
  us,e=db.query("user","querybyrole",user)
  log(us)
  log(e)
  return toSuccessResult(us)